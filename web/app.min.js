Ext.define("Traccar.Style",{singleton:!0,panelPadding:10,windowWidth:640,windowHeight:480,dateTimeFormat:"Y-m-d H:i:s",timeFormat:"H:i",dateFormat:"Y-m-d",weekStartDay:1,deviceWidth:350,reportHeight:250,reportTime:100,mapDefaultLat:51.507222,mapDefaultLon:-0.1275,mapDefaultZoom:6,mapRouteColor:"rgba(21, 127, 204, 1.0)",mapRouteWidth:5,mapArrowStrokeColor:"rgba(50, 50, 50, 1.0)",mapArrowStrokeWidth:2,mapTextColor:"rgba(50, 50, 50, 1.0)",mapTextStrokeColor:"rgba(255, 255, 255, 1.0)",mapTextStrokeWidth:2,
mapTextOffset:10,mapTextFont:"bold 12px sans-serif",mapColorOnline:"rgba(77, 250, 144, 1.0)",mapColorUnknown:"rgba(250, 190, 77, 1.0)",mapColorOffline:"rgba(255, 84, 104, 1.0)",mapColorReport:"rgba(21, 127, 204, 1.0)",mapRadiusNormal:9,mapRadiusSelected:14,mapMaxZoom:19,mapDelay:500,coordinatePrecision:6,numberPrecision:2});
Ext.define("Traccar.AttributeFormatter",{singleton:!0,coordinateFormatter:function(a){return a.toFixed(Traccar.Style.coordinatePrecision)},speedFormatter:function(a){return Ext.getStore("SpeedUnits").formatValue(a,Traccar.app.getPreference("speedUnit"))},courseFormatter:function(a){return"N NE E SE S SW W NW".split(" ")[Math.floor(a/45)]},distanceFormatter:function(a){return Ext.getStore("DistanceUnits").formatValue(a,Traccar.app.getPreference("distanceUnit"))},defaultFormatter:function(a){return"number"===
typeof a?Number(a.toFixed(Traccar.Style.numberPrecision)):"boolean"===typeof a?a?Ext.Msg.buttonText.yes:Ext.Msg.buttonText.no:a instanceof Date?Ext.Date.format(a,Traccar.Style.dateTimeFormat):a},getFormatter:function(a){return"latitude"===a||"longitude"===a?this.coordinateFormatter:"speed"===a?this.speedFormatter:"course"===a?this.courseFormatter:"distance"===a||"odometer"===a?this.distanceFormatter:this.defaultFormatter}});
Ext.define("Traccar.model.Server",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"registration",type:"boolean"},{name:"readonly",type:"boolean"},{name:"map",type:"string"},{name:"bingKey",type:"string"},{name:"mapUrl",type:"string"},{name:"language",type:"string"},{name:"distanceUnit",type:"string"},{name:"speedUnit",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"}],proxy:{type:"ajax",url:"/api/server",actionMethods:{update:"PUT"},
writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.User",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"email",type:"string"},{name:"password",type:"string"},{name:"admin",type:"boolean"},{name:"map",type:"string"},{name:"language",type:"string"},{name:"distanceUnit",type:"string"},{name:"speedUnit",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"}],proxy:{type:"rest",url:"/api/users",writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.Device",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"uniqueId",type:"string"},{name:"status",type:"string"},{name:"lastUpdate",type:"date"}]});
Ext.define("Traccar.model.Position",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"protocol",type:"string"},{name:"deviceId",type:"int"},{name:"serverTime",type:"date"},{name:"deviceTime",type:"date"},{name:"fixTime",type:"date"},{name:"valid",type:"boolean"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"altitude",type:"float"},{name:"speed",type:"float"},{name:"course",type:"float"},{name:"address",type:"string"},{name:"attributes"}]});
Ext.define("Traccar.model.Attribute",{extend:Ext.data.Model,fields:[{name:"priority",type:"int"},{name:"name",type:"string"},{name:"value",type:"string"}]});Ext.define("Traccar.model.Command",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"type",type:"string"},{name:"attributes"}]});Ext.define("Traccar.store.Devices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"/api/devices",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllDevices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"/api/devices",extraParams:{all:!0}}});Ext.define("Traccar.store.Positions",{extend:Ext.data.Store,model:"Traccar.model.Position",proxy:{type:"rest",url:"/api/positions"}});Ext.define("Traccar.store.LatestPositions",{extend:Ext.data.Store,model:"Traccar.model.Position"});
Ext.define("Traccar.store.Users",{extend:Ext.data.Store,model:"Traccar.model.User",proxy:{type:"rest",url:"/api/users",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.Attributes",{extend:Ext.data.Store,model:"Traccar.model.Attribute",sorters:[{property:"priority"}]});Ext.define("Traccar.store.MapTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"osm",name:Strings.mapOsm},{key:"bingRoad",name:Strings.mapBingRoad},{key:"bingAerial",name:Strings.mapBingAerial},{key:"custom",name:Strings.mapCustom}]});
Ext.define("Traccar.store.DistanceUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"km",name:Strings.sharedKm,factor:0.001},{key:"mi",name:Strings.sharedMi,factor:6.21371E-4}],formatValue:function(a,b){var c;return b?(c=this.findRecord("key",b),(a*c.get("factor")).toFixed(2)+" "+c.get("name")):a}});
Ext.define("Traccar.store.SpeedUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"kmh",name:Strings.sharedKmh,factor:1.852},{key:"mph",name:Strings.sharedMph,factor:1.15078}],formatValue:function(a,b){var c;return b?(c=this.findRecord("key",b),(a*c.get("factor")).toFixed(1)+" "+c.get("name")):a}});
Ext.define("Traccar.store.CommandTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"positionPeriodic",name:Strings.commandPositionPeriodic},{key:"positionStop",name:Strings.commandPositionStop},{key:"engineStop",name:Strings.commandEngineStop},{key:"engineResume",name:Strings.commandEngineResume}]});
Ext.define("Traccar.store.TimeUnits",{extend:Ext.data.Store,fields:["name","factor"],data:[{name:Strings.sharedSecond,factor:1},{name:Strings.sharedMinute,factor:60},{name:Strings.sharedHour,factor:3600}]});Ext.define("Traccar.store.Languages",{extend:Ext.data.Store,fields:["code","name"],data:function(){var a,b=[];for(a in Locale.languages)Locale.languages.hasOwnProperty(a)&&b.push({code:a,name:Locale.languages[a].name});return b}()});
Ext.define("Traccar.view.BaseDialog",{extend:Ext.window.Window,bodyPadding:Traccar.Style.panelPadding,resizable:!1,modal:!0});
Ext.define("Traccar.view.RegisterController",{extend:Ext.app.ViewController,alias:"controller.register",onCreateClick:function(){var a=this.lookupReference("form");a.isValid()&&Ext.Ajax.request({scope:this,method:"POST",url:"/api/users",jsonData:a.getValues(),callback:this.onCreateReturn})},onCreateReturn:function(a,b,c){b?(this.closeView(),Ext.toast(Strings.loginCreated)):Traccar.app.showError(c)}});
Ext.define("Traccar.view.Register",{extend:Traccar.view.BaseDialog,controller:"register",title:Strings.loginRegister,items:{xtype:"form",reference:"form",jsonSubmit:!0,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.userName,allowBlank:!1},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,vtype:"email",allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1}]},buttons:[{text:Strings.sharedSave,handler:"onCreateClick"},
{text:Strings.sharedCancel,handler:"closeView"}]});
Ext.define("Traccar.view.LoginController",{extend:Ext.app.ViewController,alias:"controller.login",init:function(){this.lookupReference("registerButton").setDisabled(!Traccar.app.getServer().get("registration"));this.lookupReference("languageField").setValue(Locale.language)},login:function(){var a=this.lookupReference("form");a.isValid()&&(Ext.getBody().mask(Strings.sharedLoading),Ext.Ajax.request({scope:this,method:"POST",url:"/api/session",params:a.getValues(),callback:function(a,c,d){Ext.getBody().unmask();
c?(Traccar.app.setUser(Ext.decode(d.responseText)),this.fireViewEvent("login")):Traccar.app.showError(Strings.loginFailed)}}))},logout:function(){Ext.Ajax.request({scope:this,method:"DELETE",url:"/api/session",callback:function(){window.location.reload()}})},onSelectLanguage:function(a){var b,c;a=a.getValue();b=window.location.href;0<=b.indexOf("locale\x3d")?(c=b.substring(0,b.indexOf("locale")),b=b.substring(b.indexOf("locale")),b=b.substring(b.indexOf("\x3d")+1),b=0<=b.indexOf("\x26")?b.substring(b.indexOf("\x26")):
"",b=c+"locale\x3d"+a+b):b=0>b.indexOf("?")?b+("?locale\x3d"+a):b+("\x26locale\x3d"+a);window.location.href=b},onAfterRender:function(a){a.focus()},onSpecialKey:function(a,b){b.getKey()===b.ENTER&&this.login()},onLoginClick:function(){Ext.getElementById("submitButton").click();this.login()},onRegisterClick:function(){Ext.create("Traccar.view.Register").show()}});
Ext.define("Traccar.view.Login",{extend:Traccar.view.BaseDialog,alias:"widget.login",controller:"login",title:Strings.loginTitle,closable:!1,modal:!1,items:{xtype:"form",reference:"form",autoEl:{tag:"form",method:"GET",action:"blank.html",target:"submitTarget"},items:[{xtype:"combobox",name:"language",fieldLabel:Strings.loginLanguage,store:"Languages",displayField:"name",valueField:"code",submitValue:!1,listeners:{select:"onSelectLanguage"},reference:"languageField"},{xtype:"textfield",name:"email",
fieldLabel:Strings.userEmail,allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey",afterrender:"onAfterRender"},inputAttrTpl:['autocomplete\x3d"on"']},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey"},inputAttrTpl:['autocomplete\x3d"on"']},{xtype:"component",html:'\x3ciframe id\x3d"submitTarget" name\x3d"submitTarget" style\x3d"display:none"\x3e\x3c/iframe\x3e'},{xtype:"component",
html:'\x3cinput type\x3d"submit" id\x3d"submitButton" style\x3d"display:none"\x3e'}]},buttons:[{text:Strings.loginRegister,handler:"onRegisterClick",reference:"registerButton"},{text:Strings.loginLogin,handler:"onLoginClick"}]});
Ext.define("Traccar.view.CommandDialogController",{extend:Ext.app.ViewController,alias:"controller.commandDialog",onSelect:function(a){this.lookupReference("paramPositionPeriodic").setHidden("positionPeriodic"!==a.getValue())},onSendClick:function(a){var b,c;a=a.up("window").down("form");a.updateRecord();c=a.getRecord();"positionPeriodic"===c.get("type")&&(a=this.lookupReference("paramPositionPeriodic"),b=a.down('numberfield[name\x3d"frequency"]').getValue(),b*=a.down('combobox[name\x3d"unit"]').getValue(),
c.set("attributes",{frequency:b}));Ext.Ajax.request({scope:this,url:"/api/commands",jsonData:c.getData(),callback:this.onSendResult})},onSendResult:function(a,b,c){b?(Ext.toast(Strings.commandSent),this.closeView()):Traccar.app.showError(c)}});
Ext.define("Traccar.view.CommandDialog",{extend:Traccar.view.BaseDialog,controller:"commandDialog",title:Strings.commandTitle,items:{xtype:"form",items:[{xtype:"combobox",name:"type",fieldLabel:Strings.commandType,store:"CommandTypes",displayField:"name",valueField:"key",listeners:{select:"onSelect"}},{xtype:"fieldcontainer",reference:"paramPositionPeriodic",name:"attributes",hidden:!0,items:[{xtype:"numberfield",fieldLabel:Strings.commandFrequency,name:"frequency"},{xtype:"combobox",fieldLabel:Strings.commandUnit,
name:"unit",store:"TimeUnits",displayField:"name",valueField:"factor"}]}]},buttons:[{text:Strings.commandSend,handler:"onSendClick"},{text:Strings.sharedCancel,handler:"closeView"}]});Ext.define("Traccar.view.BaseEditDialog",{extend:Traccar.view.BaseDialog,buttons:[{text:Strings.sharedSave,handler:"onSaveClick"},{text:Strings.sharedCancel,handler:"closeView"}]});
Ext.define("Traccar.view.BaseEditDialogController",{extend:Ext.app.ViewController,alias:"controller.baseEditDialog",onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();(c=b.store)?(b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}})):b.save();a.up("window").close()}});
Ext.define("Traccar.view.DeviceDialog",{extend:Traccar.view.BaseEditDialog,controller:"baseEditDialog",title:Strings.deviceDialog,items:{xtype:"form",items:[{xtype:"textfield",name:"name",fieldLabel:Strings.deviceName,allowBlank:!1},{xtype:"textfield",name:"testuniqueId",fieldLabel:Strings.deviceIdentifier,allowBlank:!1},{xtype:"textfield",name:"uniqueId",fieldLabel:Strings.deviceIdentifier,allowBlank:!1}]}});
Ext.define("Traccar.view.DevicesController",{extend:Ext.app.ViewController,alias:"controller.devices",config:{listen:{controller:{"*":{selectDevice:"selectDevice",selectReport:"selectReport"}}}},init:function(){var a=Traccar.app.getServer().get("readonly")&&!Traccar.app.getUser().get("admin");this.lookupReference("toolbarAddButton").setVisible(!a);this.lookupReference("toolbarEditedButton").setVisible(!a);this.lookupReference("toolbarEditedButton").setVisible(!a);this.lookupReference("toolbarRemoveButton").setVisible(!a)},onAddClick:function(){alert("ahah ahah :)");console.log("whee");var a,b;a=Ext.create("Traccar.model.Device");
a.store=this.getView().getStore();b=Ext.create("Traccar.view.DeviceDialog");b.down("form").loadRecord(a);b.show()},onEditedClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];b=Ext.create("Traccar.model.Command"),console.log("the button works")},onEditClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];b=Ext.create("Traccar.view.DeviceDialog");b.down("form").loadRecord(a);b.show()},onRemoveClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.Msg.show({title:Strings.deviceDialog,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,
no:Strings.sharedCancel},fn:function(b){"yes"===b&&(b=Ext.getStore("Devices"),b.remove(a),b.sync())}})},onCommandClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];b=Ext.create("Traccar.model.Command");b.set("deviceId",a.get("id"));a=Ext.create("Traccar.view.CommandDialog");a.down("form").loadRecord(b);a.show()},onSelectionChange:function(a){var b=0===a.getCount();this.lookupReference("toolbarEditButton").setDisabled(b);this.lookupReference("toolbarRemoveButton").setDisabled(b);
this.lookupReference("deviceCommandButton").setDisabled(b);b||this.fireEvent("selectDevice",a.getLastSelected(),!0)},selectDevice:function(a){this.getView().getSelectionModel().select([a],!1,!0)},selectReport:function(a){void 0!==a&&this.getView().getSelectionModel().deselectAll()}});
Ext.define("Traccar.view.EditToolbar",{extend:Ext.toolbar.Toolbar,xtype:"editToolbar",initComponent:function(){this.callParent(arguments);this.add(0,[{xtype:"button",handler:"onAddClick",reference:"toolbarAddButton",glyph:"xf067@FontAwesome",tooltip:Strings.sharedAdd,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onEditedClick",reference:"toolbarEditedButton",glyph:"xf043@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onEditClick",reference:"toolbarEditButton",glyph:"xf040@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onRemoveClick",reference:"toolbarRemoveButton",
glyph:"xf00d@FontAwesome",tooltip:Strings.sharedRemove,tooltipType:"title"}])}});
Ext.define("Traccar.view.UserDialogController",{extend:Ext.app.ViewController,alias:"controller.userDialog",init:function(){Traccar.app.getUser().get("admin")&&this.lookupReference("adminField").setDisabled(!1)},onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();b===Traccar.app.getUser()?b.save():(c=Ext.getStore("Users"),b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}}));a.up("window").close()}});
Ext.define("Traccar.view.UserDialog",{extend:Traccar.view.BaseEditDialog,controller:"userDialog",title:Strings.settingsUser,items:{xtype:"form",items:[{xtype:"textfield",name:"name",fieldLabel:Strings.userName},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1},{xtype:"checkboxfield",name:"admin",fieldLabel:Strings.userAdmin,allowBlank:!1,disabled:!0,reference:"adminField"},
{xtype:"combobox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key"},{xtype:"combobox",name:"distanceUnit",fieldLabel:Strings.settingsDistanceUnit,store:"DistanceUnits",displayField:"name",valueField:"key"},{xtype:"combobox",name:"speedUnit",fieldLabel:Strings.settingsSpeedUnit,store:"SpeedUnits",displayField:"name",valueField:"key"},{xtype:"numberfield",name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},
{xtype:"numberfield",name:"longitude",fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",name:"zoom",fieldLabel:Strings.serverZoom}]}});
Ext.define("Traccar.view.ServerDialog",{extend:Traccar.view.BaseEditDialog,controller:"baseEditDialog",title:Strings.serverTitle,items:{xtype:"form",items:[{xtype:"checkboxfield",name:"registration",fieldLabel:Strings.serverRegistration,allowBlank:!1},{xtype:"checkboxfield",name:"readonly",fieldLabel:Strings.serverReadonly,allowBlank:!1},{xtype:"combobox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key"},{xtype:"textfield",name:"bingKey",fieldLabel:Strings.mapBingKey},
{xtype:"textfield",name:"mapUrl",fieldLabel:Strings.mapCustom},{xtype:"combobox",name:"distanceUnit",fieldLabel:Strings.settingsDistanceUnit,store:"DistanceUnits",displayField:"name",valueField:"key"},{xtype:"combobox",name:"speedUnit",fieldLabel:Strings.settingsSpeedUnit,store:"SpeedUnits",displayField:"name",valueField:"key"},{xtype:"numberfield",name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",name:"longitude",fieldLabel:Strings.positionLongitude,
decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",name:"zoom",fieldLabel:Strings.serverZoom}]}});
Ext.define("Traccar.view.UserDevicesController",{extend:Ext.app.ViewController,alias:"controller.userDevices",init:function(){this.userId=this.getView().user.getData().id;this.getView().getStore().load({scope:this,callback:function(){Ext.create("Traccar.store.Devices").load({params:{userId:this.userId},scope:this,callback:function(a,b,c){if(c)for(b=0;b<a.length;b++)c=this.getView().getStore().find("id",a[b].getData().id),this.getView().getSelectionModel().select(c,!0,!0)}})}})},onBeforeSelect:function(a,
b){Ext.Ajax.request({scope:this,url:"/api/permissions",jsonData:{userId:this.userId,deviceId:b.getData().id},callback:function(a,b,e){b||Traccar.app.showError(e)}})},onBeforeDeselect:function(a,b){Ext.Ajax.request({scope:this,method:"DELETE",url:"/api/permissions",jsonData:{userId:this.userId,deviceId:b.getData().id},callback:function(a,b,e){b||Traccar.app.showError(e)}})}});
Ext.define("Traccar.view.UserDevices",{extend:Ext.grid.Panel,xtype:"userDevicesView",controller:"userDevices",store:"AllDevices",selModel:{selType:"checkboxmodel",checkOnly:!0,showHeaderCheckbox:!1},listeners:{beforedeselect:"onBeforeDeselect",beforeselect:"onBeforeSelect"},columns:[{text:Strings.deviceName,dataIndex:"name",flex:1},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",flex:1}]});
Ext.define("Traccar.view.BaseWindow",{extend:Ext.window.Window,width:Traccar.Style.windowWidth,height:Traccar.Style.windowHeight,layout:"fit",modal:!0});
Ext.define("Traccar.view.UsersController",{extend:Ext.app.ViewController,alias:"controller.users",init:function(){Ext.getStore("Users").load()},onAddClick:function(){var a,b;a=Ext.create("Traccar.model.User");b=Ext.create("Traccar.view.UserDialog");b.down("form").loadRecord(a);b.show()},onEditedClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];b=Ext.create("Traccar.model.Command"),console.log("the button works")},onEditClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];b=Ext.create("Traccar.view.UserDialog");b.down("form").loadRecord(a);b.show()},onRemoveClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];
Ext.Msg.show({title:Strings.settingsUser,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,no:Strings.sharedCancel},fn:function(b){var c=Ext.getStore("Users");"yes"===b&&(c.remove(a),c.sync())}})},onDevicesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.deviceTitle,items:{xtype:"userDevicesView",user:a}}).show()},onSelectionChange:function(a){a=0<a.length;this.lookupReference("toolbarEditButton").setDisabled(a);
this.lookupReference("toolbarRemoveButton").setDisabled(a);this.lookupReference("userDevicesButton").setDisabled(a)}});
Ext.define("Traccar.view.Users",{extend:Ext.grid.Panel,xtype:"usersView",controller:"users",store:"Users",selType:"rowmodel",tbar:{xtype:"editToolbar",items:[{text:Strings.deviceTitle,disabled:!0,handler:"onDevicesClick",reference:"userDevicesButton"}]},listeners:{selectionchange:"onSelectionChange"},columns:[{text:Strings.userName,dataIndex:"name",flex:1},{text:Strings.userEmail,dataIndex:"email",flex:1},{text:Strings.userAdmin,dataIndex:"admin",flex:1}]});
Ext.define("Traccar.view.SettingsMenuController",{extend:Ext.app.ViewController,alias:"controller.settings",init:function(){Traccar.app.getUser().get("admin")&&(this.lookupReference("settingsServerButton").setHidden(!1),this.lookupReference("settingsUsersButton").setHidden(!1))},onUserClick:function(){var a=Ext.create("Traccar.view.UserDialog");a.down("form").loadRecord(Traccar.app.getUser());a.show()},onServerClick:function(){var a=Ext.create("Traccar.view.ServerDialog");a.down("form").loadRecord(Traccar.app.getServer());
a.show()},onUsersClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsUsers,modal:!1,items:{xtype:"usersView"}}).show()},onLogoutClick:function(){Ext.create("Traccar.view.LoginController").logout()}});
Ext.define("Traccar.view.SettingsMenu",{extend:Ext.button.Button,xtype:"settingsMenu",glyph:"xf013@FontAwesome",text:Strings.settingsTitle,menu:{controller:"settings",items:[{text:Strings.settingsUser,handler:"onUserClick"},{text:Strings.settingsServer,hidden:!0,handler:"onServerClick",reference:"settingsServerButton"},{text:Strings.settingsUsers,hidden:!0,handler:"onUsersClick",reference:"settingsUsersButton"},{text:Strings.loginLogout,handler:"onLogoutClick"}]}});
Ext.define("Traccar.view.Devices",{extend:Ext.grid.Panel,xtype:"devicesView",controller:"devices",store:"Devices",title:Strings.deviceTitle,selType:"rowmodel",tbar:{xtype:"editToolbar",items:[{disabled:!0,handler:"onCommandClick",reference:"deviceCommandButton",glyph:"xf093@FontAwesome",tooltip:Strings.deviceCommand,tooltipType:"title"},{xtype:"tbfill"},{id:"deviceFollowButton",glyph:"xf05b@FontAwesome",tooltip:Strings.deviceFollow,tooltipType:"title",enableToggle:!0},{xtype:"settingsMenu"}]},listeners:{selectionchange:"onSelectionChange"},
columns:[{text:Strings.deviceName,dataIndex:"name",flex:1},{text:Strings.deviceLastUpdate,dataIndex:"lastUpdate",flex:1,renderer:function(a,b,c){switch(c.get("status")){case "online":b.tdCls="status-color-online";break;case "offline":b.tdCls="status-color-offline";break;default:b.tdCls="status-color-unknown"}return Ext.Date.format(a,Traccar.Style.dateTimeFormat)}}]});
Ext.define("Traccar.view.StateController",{extend:Ext.app.ViewController,alias:"controller.state",config:{listen:{controller:{"*":{selectDevice:"selectDevice",selectReport:"selectReport"}},store:{"#LatestPositions":{add:"updateLatest",update:"updateLatest"},"#Positions":{clear:"clearReport"}}}},keys:function(){var a,b,c;c={};b="fixTime latitude longitude valid altitude speed course address protocol".split(" ");for(a=0;a<b.length;a++)c[b[a]]={priority:a,name:Strings["position"+b[a].replace(/^\w/g,
function(a){return a.toUpperCase()})]};return c}(),updateLatest:function(a,b){var c;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)this.deviceId===b[c].get("deviceId")&&this.updatePosition(b[c])},formatValue:function(a){return"number"===typeof id?Number(a.toFixed(2)):a},updatePosition:function(a){var b,c;b=Ext.getStore("Attributes");b.removeAll();for(c in a.data)a.data.hasOwnProperty(c)&&void 0!==this.keys[c]&&b.add(Ext.create("Traccar.model.Attribute",{priority:this.keys[c].priority,name:this.keys[c].name,
value:Traccar.AttributeFormatter.getFormatter(c)(a.get(c))}));a=a.get("attributes");if(a instanceof Object)for(c in a)a.hasOwnProperty(c)&&b.add(Ext.create("Traccar.model.Attribute",{priority:1024,name:c.replace(/^./,function(a){return a.toUpperCase()}),value:Traccar.AttributeFormatter.getFormatter(c)(a[c])}))},selectDevice:function(a){this.deviceId=a.get("id");(a=Ext.getStore("LatestPositions").findRecord("deviceId",this.deviceId,0,!1,!1,!0))?this.updatePosition(a):Ext.getStore("Attributes").removeAll()},
selectReport:function(a){this.deviceId=null;this.updatePosition(a)},clearReport:function(){Ext.getStore("Attributes").removeAll()}});Ext.define("Traccar.view.State",{extend:Ext.grid.Panel,xtype:"stateView",controller:"state",store:"Attributes",title:Strings.stateTitle,columns:[{text:Strings.stateName,dataIndex:"name",flex:1},{text:Strings.stateValue,dataIndex:"value",flex:1}]});
Ext.define("Traccar.view.ReportController",{extend:Ext.app.ViewController,alias:"controller.report",config:{listen:{controller:{"*":{selectDevice:"selectDevice",selectReport:"selectReport"}}}},onShowClick:function(){var a,b,c,d;a=this.lookupReference("deviceField").getValue();b=this.lookupReference("fromDateField").getValue();c=this.lookupReference("fromTimeField").getValue();b=new Date(b.getFullYear(),b.getMonth(),b.getDate(),c.getHours(),c.getMinutes(),c.getSeconds(),c.getMilliseconds());c=this.lookupReference("toDateField").getValue();
d=this.lookupReference("toTimeField").getValue();c=new Date(c.getFullYear(),c.getMonth(),c.getDate(),d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds());Ext.getStore("Positions").load({params:{deviceId:a,from:b.toISOString(),to:c.toISOString()}})},onClearClick:function(){Ext.getStore("Positions").removeAll()},onSelectionChange:function(a){0<a.getCount()&&this.fireEvent("selectReport",a.getLastSelected(),!0)},selectDevice:function(a){a&&this.getView().getSelectionModel().deselectAll()},
selectReport:function(a){this.getView().getSelectionModel().select([a],!1,!0)}});
Ext.define("Traccar.view.Report",{extend:Ext.grid.Panel,xtype:"reportView",controller:"report",store:"Positions",title:Strings.reportTitle,tbar:[{xtype:"tbtext",html:Strings.reportDevice},{xtype:"combobox",reference:"deviceField",store:"Devices",valueField:"id",displayField:"name",typeAhead:!0,queryMode:"local"},"-",{xtype:"tbtext",html:Strings.reportFrom},{xtype:"datefield",reference:"fromDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-
18E5)},{xtype:"timefield",reference:"fromTimeField",maxWidth:Traccar.Style.reportTime,format:Traccar.Style.timeFormat,value:new Date((new Date).getTime()-18E5)},"-",{xtype:"tbtext",html:Strings.reportTo},{xtype:"datefield",reference:"toDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date},{xtype:"timefield",reference:"toTimeField",maxWidth:Traccar.Style.reportTime,format:Traccar.Style.timeFormat,value:new Date},"-",{text:Strings.reportShow,handler:"onShowClick"},
{text:Strings.reportClear,handler:"onClearClick"}],listeners:{selectionchange:"onSelectionChange"},columns:[{text:Strings.positionValid,dataIndex:"valid",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("valid")},{text:Strings.positionFixTime,dataIndex:"fixTime",flex:1,xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("fixTime")},{text:Strings.positionLatitude,dataIndex:"latitude",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("latitude")},{text:Strings.positionLongitude,
dataIndex:"longitude",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("latitude")},{text:Strings.positionAltitude,dataIndex:"altitude",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("altitude")},{text:Strings.positionSpeed,dataIndex:"speed",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.positionAddress,dataIndex:"address",flex:1,renderer:Traccar.AttributeFormatter.getFormatter("address")}]});
Ext.define("Traccar.view.MapController",{extend:Ext.app.ViewController,alias:"controller.map",config:{listen:{controller:{"*":{selectDevice:"selectDevice",selectReport:"selectReport"}},store:{"#Devices":{add:"updateDevice",update:"updateDevice"},"#LatestPositions":{add:"updateLatest",update:"updateLatest"},"#Positions":{load:"loadReport",clear:"clearReport"}},component:{"#":{selectFeature:"selectFeature"}}}},init:function(){this.latestMarkers={};this.reportMarkers={}},getDeviceColor:function(a){switch(a.get("status")){case "online":return Traccar.Style.mapColorOnline;
case "offline":return Traccar.Style.mapColorOffline;default:return Traccar.Style.mapColorUnknown}},changeMarkerColor:function(a,b){return new ol.style.Style({image:new ol.style.Arrow({radius:a.getImage().getRadius(),fill:new ol.style.Fill({color:b}),stroke:a.getImage().getStroke(),rotation:a.getImage().getRotation()}),text:a.getText()})},updateDevice:function(a,b){var c,d,e;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)d=b[c],e=d.get("id"),e in this.latestMarkers&&(e=this.latestMarkers[e],e.setStyle(this.changeMarkerColor(e.getStyle(),
this.getDeviceColor(d))))},followSelected:function(){return Ext.getCmp("deviceFollowButton")&&Ext.getCmp("deviceFollowButton").pressed},updateLatest:function(a,b){var c,d,e,f,h,g;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)d=b[c],h=d.get("deviceId"),f=Ext.getStore("Devices").findRecord("id",h,0,!1,!1,!0),e=new ol.geom.Point(ol.proj.fromLonLat([d.get("longitude"),d.get("latitude")])),h in this.latestMarkers?(g=this.latestMarkers[h],g.setGeometry(e)):(g=new ol.Feature(e),g.set("record",f),this.latestMarkers[h]=
g,this.getView().getLatestSource().addFeature(g),e=this.getLatestMarker(this.getDeviceColor(f)),e.getText().setText(f.get("name")),g.setStyle(e)),g.getStyle().getImage().setRotation(d.get("course")*Math.PI/180),g===this.selectedMarker&&this.followSelected()&&this.getView().getMapView().setCenter(g.getGeometry().getCoordinates())},loadReport:function(a,b){var c,d,e,f,h;this.clearReport(a);this.reportRoute=new ol.Feature({geometry:new ol.geom.LineString([])});this.reportRoute.setStyle(this.getRouteStyle());
this.getView().getRouteSource().addFeature(this.reportRoute);for(c=0;c<b.length;c++)d=b[c],e=ol.proj.fromLonLat([d.get("longitude"),d.get("latitude")]),f=new ol.geom.Point(e),f=new ol.Feature(f),f.set("record",d),this.reportMarkers[d.get("id")]=f,this.getView().getReportSource().addFeature(f),h=this.getReportMarker(),h.getImage().setRotation(d.get("course")*Math.PI/180),f.setStyle(h),this.reportRoute.getGeometry().appendCoordinate(e)},clearReport:function(){var a;this.reportRoute&&(this.getView().getRouteSource().removeFeature(this.reportRoute),
this.reportRoute=null);if(this.reportMarkers){for(a in this.reportMarkers)this.reportMarkers.hasOwnProperty(a)&&this.getView().getReportSource().removeFeature(this.reportMarkers[a]);this.reportMarkers={}}},getRouteStyle:function(){return new ol.style.Style({stroke:new ol.style.Stroke({color:Traccar.Style.mapRouteColor,width:Traccar.Style.mapRouteWidth})})},getMarkerStyle:function(a,b){return new ol.style.Style({image:new ol.style.Arrow({radius:a,fill:new ol.style.Fill({color:b}),stroke:new ol.style.Stroke({color:Traccar.Style.mapArrowStrokeColor,
width:Traccar.Style.mapArrowStrokeWidth})}),text:new ol.style.Text({textBaseline:"bottom",fill:new ol.style.Fill({color:Traccar.Style.mapTextColor}),stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),offsetY:-a/2-Traccar.Style.mapTextOffset,font:Traccar.Style.mapTextFont})})},getLatestMarker:function(a){return this.getMarkerStyle(Traccar.Style.mapRadiusNormal,a)},getReportMarker:function(){return this.getMarkerStyle(Traccar.Style.mapRadiusNormal,
Traccar.Style.mapColorReport)},resizeMarker:function(a,b){return new ol.style.Style({image:new ol.style.Arrow({radius:b,fill:a.getImage().getFill(),stroke:a.getImage().getStroke(),rotation:a.getImage().getRotation()}),text:a.getText()})},selectMarker:function(a,b){this.selectedMarker&&this.selectedMarker.setStyle(this.resizeMarker(this.selectedMarker.getStyle(),Traccar.Style.mapRadiusNormal));a&&(a.setStyle(this.resizeMarker(a.getStyle(),Traccar.Style.mapRadiusSelected)),b&&this.getView().getMapView().setCenter(a.getGeometry().getCoordinates()));
this.selectedMarker=a},selectDevice:function(a,b){this.selectMarker(this.latestMarkers[a.get("id")],b)},selectReport:function(a,b){this.selectMarker(this.reportMarkers[a.get("id")],b)},selectFeature:function(a){(a=a.get("record"))&&(a instanceof Traccar.model.Device?this.fireEvent("selectDevice",a,!1):this.fireEvent("selectReport",a,!1))}});
Ext.define("Traccar.view.Map",{extend:Ext.form.Panel,xtype:"mapView",controller:"map",title:Strings.mapTitle,layout:"fit",getMap:function(){return this.map},getMapView:function(){return this.mapView},getLatestSource:function(){return this.latestSource},getRouteSource:function(){return this.routeSource},getReportSource:function(){return this.reportSource},listeners:{afterrender:function(){var a,b,c,d,e,f,h,g,j;a=Traccar.app.getUser();b=Traccar.app.getServer();c=a.get("map")||b.get("map");d=b.get("bingKey");
c="custom"===c?new ol.layer.Tile({source:new ol.source.XYZ({url:b.get("mapUrl"),attributions:[new ol.Attribution({html:""})]})}):"bingRoad"===c?new ol.layer.Tile({source:new ol.source.BingMaps({key:d,imagerySet:"Road"})}):"bingAerial"===c?new ol.layer.Tile({source:new ol.source.BingMaps({key:d,imagerySet:"Aerial"})}):new ol.layer.Tile({source:new ol.source.OSM({})});this.latestSource=new ol.source.Vector({});d=new ol.layer.Vector({source:this.latestSource});this.routeSource=new ol.source.Vector({});
e=new ol.layer.Vector({source:this.routeSource});this.reportSource=new ol.source.Vector({});f=new ol.layer.Vector({source:this.reportSource});h=a.get("latitude")||b.get("latitude")||Traccar.Style.mapDefaultLat;g=a.get("longitude")||b.get("longitude")||Traccar.Style.mapDefaultLon;a=a.get("zoom")||b.get("zoom")||Traccar.Style.mapDefaultZoom;this.mapView=new ol.View({center:ol.proj.fromLonLat([g,h]),zoom:a,maxZoom:Traccar.Style.mapMaxZoom});this.map=new ol.Map({target:this.body.dom.id,layers:[c,e,f,
d],view:this.mapView});j=this.map.getTarget();"string"===typeof j&&(j=Ext.get(j).dom);this.map.on("pointermove",function(a){j.style.cursor=this.forEachFeatureAtPixel(a.pixel,function(){return!0})?"pointer":""});this.map.on("click",function(a){this.map.forEachFeatureAtPixel(a.pixel,function(a){this.fireEvent("selectFeature",a)},this)},this)},resize:function(){this.map.updateSize()}}});
Ext.define("Traccar.view.Main",{extend:Ext.container.Viewport,alias:"widget.main",layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"west",layout:"border",width:Traccar.Style.deviceWidth,title:Strings.devicesAndState,defaults:{split:!0,flex:1},items:[{region:"center",xtype:"devicesView"},{region:"south",xtype:"stateView"}]},{region:"south",xtype:"reportView",height:Traccar.Style.reportHeight,collapsed:!0,titleCollapse:!0,floatable:!1},{region:"center",xtype:"mapView",header:!0,
collapsible:!1}]});Ext.define("Traccar.view.MainMobile",{extend:Ext.container.Viewport,alias:"widget.mainMobile",layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"east",xtype:"stateView",flex:4,collapsed:!0,titleCollapse:!0,floatable:!1},{region:"center",xtype:"mapView",collapsible:!1,flex:2},{region:"south",xtype:"devicesView",flex:1}]});
Ext.define("Traccar.controller.Root",{extend:Ext.app.Controller,init:function(){var a=document.createElement("div");a.className="state-indicator";document.body.appendChild(a);this.isPhone=0!==parseInt(window.getComputedStyle(a).getPropertyValue("z-index"),10)},onLaunch:function(){Ext.Ajax.request({scope:this,url:"/api/server",callback:this.onServerReturn})},onServerReturn:function(a,b,c){Ext.get("spinner").remove();b?(Traccar.app.setServer(Ext.decode(c.responseText)),Ext.Ajax.request({scope:this,
url:"/api/session",callback:this.onSessionReturn})):Traccar.app.showError(c)},onSessionReturn:function(a,b,c){b?(Traccar.app.setUser(Ext.decode(c.responseText)),this.loadApp()):(this.login=Ext.create("widget.login",{listeners:{scope:this,login:this.onLogin}}),this.login.show())},onLogin:function(){this.login.close();this.loadApp()},loadApp:function(){Ext.getStore("Devices").load();Ext.get("attribution").remove();this.isPhone?Ext.create("widget.mainMobile"):Ext.create("widget.main");this.asyncUpdate(!0)},
asyncUpdate:function(){(new WebSocket("ws://"+window.location.host+"/api/socket")).onmessage=function(a){var b,c,d,e;c=Ext.decode(a.data);if(c.devices){d=c.devices;b=Ext.getStore("Devices");for(a=0;a<d.length;a++)(e=b.findRecord("id",d[a].id,0,!1,!1,!0))&&e.set({status:d[a].status,lastUpdate:d[a].lastUpdate},{dirty:!1})}if(c.positions){d=c.positions;b=Ext.getStore("LatestPositions");for(a=0;a<d.length;a++)(e=b.findRecord("deviceId",d[a].deviceId,0,!1,!1,!0))?e.set(d[a]):b.add(Ext.create("Traccar.model.Position",
d[a]))}}}});
Ext.define("Traccar.Application",{extend:Ext.app.Application,name:"Traccar",models:"Server User Device Position Attribute Command".split(" "),stores:"Devices AllDevices Positions LatestPositions Users Attributes MapTypes DistanceUnits SpeedUnits CommandTypes TimeUnits Languages".split(" "),controllers:["Root"],setUser:function(a){this.user=Ext.create("Ext.data.reader.Json",{model:"Traccar.model.User"}).readRecords(a).getRecords()[0]},getUser:function(){return this.user},setServer:function(a){this.server=Ext.create("Ext.data.reader.Json",
{model:"Traccar.model.Server"}).readRecords(a).getRecords()[0]},getServer:function(){return this.server},getPreference:function(a,b){return this.getUser().get(a)||this.getServer().get(a)||b},showError:function(a){Ext.isString(a)?Ext.Msg.alert(Strings.errorTitle,a):a.responseText?(a=Ext.decode(a.responseText),a.details?Ext.Msg.alert(Strings.errorTitle,a.details):Ext.Msg.alert(Strings.errorTitle,a.message)):a.statusText?Ext.Msg.alert(Strings.errorTitle,a.statusText):Ext.Msg.alert(Strings.errorTitle,
Strings.errorConnection)}});Ext.application({name:"Traccar",extend:Traccar.Application});